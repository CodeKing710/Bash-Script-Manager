#!/bin/bash

version="1.2.1"
log="/var/log/bsm_log.log"
errlog="/var/log/bsm_err_log.log"
node="sudo snap install --edge node --classic >> $log 2>> $errlog"
python="sudo apt install python3-pip >> $log 2>> $errlog"
ruby="sudo apt install ruby-full >> $log 2>> $errlog"
lisp="sudo apt install sbcl >> $log 2>> $errlog"

if [[ "$1" == "-v" ]]; then
  echo "$version"
elif [[ "$1" == "-u" ]]; then
  echo "Uninstalling BSM..."
  sudo rm -r /scripts
  sudo rm /var/log/bsm_log.log
  sudo rm /var/log/bsm_err_log.log
  sudo rm /usr/local/bin/bsm
  echo "Uninstalling BSM-install..."
  sudo rm /usr/local/sbin/bsm-install
  echo "Resetting PATH..."
  # echo "$(head -n -1 ~/.bashrc)" > ~/.bashrc #Reset bashrc
  export PATH="$(echo "$PATH" | tr -s ':' '\n' | grep -v "/scripts" | tr -s '\n' ':' | sed 's/.$//')" #Reset PATH
  echo "Sucessfully uninstalled BSM!"
elif [[ "$1" == "-c" ]]; then
  #Clear log files
  echo "Clearing logs..."
  echo "" > /var/log/bsm_err_log.log
  echo "" > /var/log/bsm_log.log
  if [ "${2,,}" =~ "node" ]; then
    echo "This will clear all Node.js scripts, are you sure you want to delete these scripts? [Y/n] "
    read yn
    if [ "${yn,,}" == 'y' ]; then
      echo "Removing Node.js scripts..."
      sudo rm /scripts/node/*
    fi
  elif [ "${2,,}" =~ "py" ]; then
    echo "This will clear all Python scripts, are you sure you want to delete these scripts? [Y/n] "
    read yn
    if [ "${yn,,}" == 'y' ]; then
      echo "Removing Python scripts..."
      sudo rm /scripts/python/*
    fi
  elif [ "${2,,}" =~ "ruby" ]; then
    echo "This will clear all Ruby scripts, are you sure you want to delete these scripts? [Y/n] "
    read yn
    if [ "${yn,,}" == 'y' ]; then
      echo "Removing Ruby scripts..."
      sudo rm /scripts/ruby/*
    fi
  elif [ "${2,,}" =~ "l" ]; then
    echo "This will clear all LISP scripts, are you sure you want to delete these scripts? [Y/n] "
    read yn
    if [ "${yn,,}" == 'y' ]; then
      echo "Removing LISP scripts..."
      sudo rm /scripts/lisp/*
    fi
  elif [ "${2,,}" =~ "sh" ]; then
    echo "This will clear all Bash scripts, are you sure you want to delete these scripts? [Y/n] "
    read yn
    if [ "${yn,,}" == 'y' ]; then
      echo "Removing Bash scripts..."
      sudo rm /scripts/* 2> /dev/null
    fi
  fi
elif [[ "$1" == "-rd" ]]; then
  if [[ "${2,,}" =~ "node" ]]; then
  echo "Installing and setting up Node..."
    sudo mkdir /scripts/node
    $node
  elif [[ "${2,,}" =~ "py" ]]; then
  echo "Installing and setting up Python..."
    sudo mkdir /scripts/python
    $python
  elif [[ "${2,,}" =~ "ruby" ]]; then
  echo "Installing and setting up Ruby..."
    sudo mkdir /scripts/ruby
    $ruby
  elif [[ "${2,,}" =~ "l" ]]; then
  echo "Installing and setting up LISP..."
    sudo mkdir /scripts/lisp
    $lisp
  else
    echo "Setting up BSM Folders..."
    sudo mkdir /scripts/node
    sudo mkdir /scripts/python
    sudo mkdir /scripts/ruby
    sudo mkdir /scripts/lisp
    echo "Installing BSM Dependencies..."
    $node
    $python
    $ruby
    $lisp
  fi
else
  #general install for BSM
  echo "Installing..."
  sudo cp "$(find ~ -name "bsm")" /usr/local/bin/bsm && echo "Copy of BSM added to program registry!"
  sudo cp "$(find ~ -name "bsm-install")" /usr/local/sbin/bsm-install && echo "Installer copied to system registry!"
  sudo chmod 755 /usr/local/bin/bsm
  echo "Updating PATH..."
  #This assumes you haven't modified the original bashrc file with your own things that don't end in 'fi'
  if [[ "$(echo "$PATH" | grep /scripts)" == "" ]]; then
    export PATH="$PATH:/scripts:/scripts/node:/scripts/python:/scripts/ruby:/scripts/lisp"
  fi
  echo "Setting up logging and scripts folders..."
  if [ ! -d "/scripts" ]; then
    sudo mkdir /scripts
    sudo chmod 777 /scripts
  fi
  if [ ! -e "/var/log/bsm_err_log.log" ]; then
    sudo touch /var/log/bsm_err_log.log
    sudo chmod 766 /var/log/bsm_err_log.log
  fi
  if [ ! -e "/var/log/bsm_log.log" ]; then
    sudo touch /var/log/bsm_log.log
    sudo chmod 766 /var/log/bsm_log.log
  fi

  #This should setup BSM, logging is sent to stdout to check for any errors
  echo "BSM has been successfully installed!"
fi